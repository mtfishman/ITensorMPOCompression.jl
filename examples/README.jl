#' # ITensorMPOCompression
#'
#' A package to enable block respecting compression of Matrix Product Operators (MPOs) for use with ITensors.jl.
#'   
#'  Reference: *Daniel E. Parker, Xiangyu Cao, and Michael P. Zaletel Phys. Rev. B 102, 035147*
#' 
#'   ITensors has built in support for generating MPOs from local operators. This framework is called `AutoMPO`.  MPOs
#'   generated by `AutoMPO` are already compressed, so you only need this package
#'   if you: 
#'
#'     1. Are using MPOs that are created by hand, outside the `AutoMPO` framework.  
#'     2. Want your MPO to be in orthogonal/canonical form.
#'     3. Need to see the bond spectrums throughout the lattice. 
#'
#'   Support for compression of infinite lattice MPOs (iMPOs) is in the ITensorInfiniteMPS package
#'   which can be found [here](https://github.com/ITensor/ITensorInfiniteMPS.jl).
#'
#'   Technical notes on what this package does can be founs [here](https://github.com/JanReimers/ITensorMPOCompression.jl/blob/main/docs/TechnicalDetails.pdf)
#'

#' ## Installation
#'
#' You can install this package through the Julia package manager:
#' ```julia
#' julia> ] add ITensorMPOCompression
#' ```
#' ## Examples
#'
#' Here are is an example of orthogonalizing an hand generated (not using AutoMPO) MPO
#+ term=true
using ITensors, ITensorMPS
using ITensorMPOCompression
include("../test/hamiltonians/hamiltonians.jl");

N = 10; #10 sites
NNN = 7; #Include up to 7th nearest neighbour interactions
sites = siteinds("S=1/2", N);
H = transIsing_MPO(sites, NNN);
is_regular_form(H,lower) == true
@show get_Dw(H); #Show bond dimensions
pprint(H[2]) #schematic view of operators at site #2
orthogonalize!(H,left); #Orthogonalize into left canonical form.  Also does rank reduction.
orthogonalize!(H,right); #Orthogonalize into right canoncial form.
pprint(H[2]) #Show vastly reduced matrix of operators at site #2
@show get_Dw(H); #Show reduced bond dimensions
is_regular_form(H,lower) == true
isortho(H, right) == true #looks at cached ortho center limits
check_ortho(H,right) == true #Does the more expensive V*V_dagger==Id contraction and test
pprint(H) #High level view of what is in the MPO.

#' Here are is an example of truncating an hand generated (not using AutoMPO) MPO
#+ term=true
using ITensors, ITensorMPS
using ITensorMPOCompression
include("../test/hamiltonians/hamiltonians.jl");

N = 10; #10 sites
NNN = 7; #Include up to 7th nearest neighbour interactions
sites = siteinds("S=1/2", N);
H = transIsing_MPO(sites, NNN);
is_regular_form(H,lower) == true
spectrums = truncate!(H,left); 
pprint(H[5])
@show get_Dw(H);
@show spectrums;
is_regular_form(H,lower) == true
isortho(H, left) == true
check_ortho(H, left) == true

#' ## Generating this README

#' This file was generated with [weave.jl](https://github.com/JunoLab/Weave.jl) with the following commands:
#+ eval=false

using ITensorMPOCompression, Weave
weave(
  joinpath(pkgdir(ITensorMPOCompression), "examples", "README.jl");
  doctype="github",
  out_path=pkgdir(ITensorMPOCompression),
)

